# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aAQuYYJDWDMCda8eklB6qlOUxgzMslQ-
"""

#Bus Fare Challenge – Task One (Day 1)

#Write a program that does the following:
#1.	Gets today's date and stores it in a variable 'date'
#2.	Uses today's date to get the name on the day of the week written in short form with the first letter capitalized eg. 'Fri' if today were Friday and assigns it a variable 'day'
#3.	Uses if statements to determine the today's fare following these bus fare schedule:
#Monday - Friday --> 100
#Saturday --> 60
#Sunday --> 80
#4.	Prints the results in this format 
#Date: 2022-07-05
#Day: Tue
#Fare: 100

import datetime as dt

current_date = dt.date.today()
Final_date = current_date.strftime("%A")
day = current_date.strftime("%a")
weekday = dt.date.today().weekday()

print("Date:",current_date)
print("Day:", day)

if weekday <5:
    print("Fare:100")
elif weekday == 5:
    print("Fare:60")
elif weekday == 6:
    print("Fare:80")
else:
    pass

#Sales Tax Challenge – Task Two (Day 1)

#A painting company has determined that for every 115 square feet of wall space, one gallon of paint and eight hours of labor will be required. 
#The company charges $20.00 per hour for labor. 
#Write a program that asks the user to enter the square feet of wall space to be painted and the price of the paint per gallon. 
#The program should display the following data: 
#The number of gallons of paint required 
#The hours of labor required 
#The cost of the paint 
#The labor charges 
#The total cost of the paint job

wall_size = int(input("Enter the wall size to be painted in sq ft: "))
unit_price = int(input("Enter the cost of one gallon of the paint to be used: "))

gallons = wall_size / 115
time = gallons * 8
paint_cost = gallons * unit_price
labour = gallons * 8 * 20
total = paint_cost + labour

print("The number of gallons of paint required: ", gallons)
print("The hours of labor required : ", time)
print("The cost of the paint : ", paint_cost)
print("The labor charges : ", labour)
print("The total cost of the paint job: ", total)

#Personality test program - Task One (Day 2)

#Book Club Points Serendipity Booksellers has a book club that awards points to its customers based on the number of books purchased each month. 
#The points are awarded as follows:
#If a customer purchases 0 books, he or she earns 0 points. 
#If a customer purchases 1 book, he or she earns 6 points. 
#If a customer purchases 2 books, he or she earns 16 points.
#If a customer purchases 3 books, he or she earns 32 points. 
#If a customer purchases 4 or more books, he or she earns 60 points. 
#Write a program that asks the user to enter the number of books that he or she has purchased this month and displays the number of points awarded


books = int(input("Enter the number of books you have bought this month: "))
output = ""

if books < 0:
    message = "Please enter zero or a positive number"
else:
    message = "You are awared "

    if books == 0:
        message += "0 "
    elif books == 1:
        message += "6 "
    elif books == 2:
        message += "16 "
    elif books == 3:
        message += "30 "
    elif books == 4:
        message += "60 "
    elif books >= 5:
        message += "more than 60 "

    message += "points."

print(message)

#Write a python program that takes user inputs and determines what career the user should learn.
#Requirements:
#Store career options in a list or in variables.
#Store career advices in a list.
#Store career questions in a list.
#Use conditional statements that determines the user selected choice.
#When a wrong input is entered the program should print out an error message.
#When all the questions are done the program should determine which career the user should venture in and program should terminate.

careers = ["teaching", "medicine", "engineering", "business"]
career_advice = [{
    "A": "teaching",
    "B": "medicine",
    "C": "engineering",
    "D": "business"
}]

career_qsns = ["Enter grade (eg A, B, C, D) "]
grade=str(input(career_qsns)).upper()

if grade == "A":
    print("You can venture into ", career_advice[0]["A"])
elif grade == "B":
    print("You can venture into ", career_advice[0]["B"])
elif grade == "C":
    print("You can venture into ", career_advice[0]["C"])
elif grade == "D":
     print("You can venture into ", career_advice[0]["D"])
else:
    pass

#Personality test program - Task One (Day 3)

#Write a python program that simulates a door lock system such that:
#Password is set and stored in a variable
#Commands to instruct the door are stored in variables.
#When a user enters the wrong password an error message is displayed and prompted to enter the password again.
#When a user enters “open” a “The door is now open” statement is displayed, when the “open” is entered more that once, a message is displayed saying, “the door is already open” 
#When a user enters “close” a “The door is now locked” statement is displayed, when the “open” is entered more that once, a message is displayed saying, “the door is already locked”
#When a user enters “quit” the process is terminated and message is displayed.
#When a wrong message is entered or invalid key pressed a “Invalid input” message is displayed. 
#When the door is locked or open, it prints out the last date/time the door was opened, eg “Door Last open  at 2022-07-05 08:46:20.535395”

import datetime 

current_time = datetime.datetime.now() 


set_password = input('Please set your password: ')
print('You have set your password successfully...')
print()

open = 'open'
close = 'close'
quit = 'quit'

while True:
    password = input('Enter your password: ')
    if password == set_password:
        print('Password entered successfully...')
        break
    else:
        print('Oops! Incorrect password. Try again.')
        continue


while True:
    open = False
    close = False
    quit = False

    cmd_1 = input('Enter your command: ')
    print()

    if cmd_1 == 'open':       
        print('The door is now open') 
        print('Door last open at ',current_time)
        time_now = datetime.datetime.now()
        open = True
        break

    elif cmd_1 == 'close':
        close = True
        print('The door is now closed')
        print('Door last closed at ',current_time)
        time_now = datetime.datetime.now()
        break

    elif cmd_1 == 'quit':
        quit = True
        break

    else:
        print('Invalid input')
        break


while True:
    if quit == True:
        print('You have logged out')
        break

    cmd_2  = input('Enter your command: ')
    print()

    if close == True and cmd_2 == 'close':
        print('The door is already locked')
        print('Door last closed at ',time_now)
        continue
        
    if cmd_2 == 'open' and open == True:       
        print('The door is already open')  
        print('Door last open  at ',time_now)
        continue

    if cmd_2 == 'close':
        print('The door is now closed')
        print('Door last closed at ',time_now)
        close = True
        continue

    elif cmd_2 == 'open':
        print('The door is now open')
        print('Door last open at ',time_now)
        continue
        open = True

    if cmd_2 == 'quit':
        print('You have logged out')
        break

    else:
        print('Invalid input')
        continue

#Day 3: Challenge Task Two (Day 3)

#Calories from Fat and Carbohydrates A nutritionist who works for a fitness club helps members by evaluating their diets. 
#As part of her evaluation, she asks members for the number of fat grams and carbohydrate grams that they consumed in a day. 
#Then, she calculates the number of calories that result from the fat, using the following formula: 
#Calories from fats = fat grams * 9 
#Next, she calculates the number of calories that result from the carbohydrates, using the following formula: 
#Calories from carbs = carb grams * 4 
#The nutritionist asks you to write a program that will make these calculations.

def main():
    fat_grams = int(input("Enter number of grams of fat consumed in a day: "))
    carb_grams = int(input("Enter number of grams of carbohydrates consumed in a day: "))

    calories_from_fat(fat_grams)
    calories_from_carb(carb_grams)

def calories_from_fat(fat_grams):
    calories_from_fat = fat_grams * 9
    print("The calories from fat are: ", calories_from_fat)

def calories_from_carb(carb_grams):
    calories_from_carb = carb_grams * 4
    print("The calories from carbohydrates are: ", calories_from_carb)

main()